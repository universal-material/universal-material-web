@use "../scss/variables";
@use "../scss/api";

:host {
  display: block;
  background-color: var(--u-top-app-bar-bg-color, var(--u-color-body, #{api.get-color-var(surface)}));
  color: var(--u-top-app-bar-text-color, #{api.get-color-var(on-surface)});
  transition: background-color 100ms, inset 375ms variables.$awesome-cubic-bezier;
}

:host([container-scrolled]) {
  background-color: var(--u-top-app-bar-constrast-bg-color, #{api.get-color-var(surface-container)});
}

:host(:not([has-leading-icon])) .leading-icon {
  display: none;
}

:host(:not([has-trailing-icon])) .trailing-icon {
  display: none;
}

slot[name="leading-icon"],
slot[name="trailing-icon"] {
  display: inline-flex;
  align-items: center;
  gap: var(--u-top-app-bar-icons-gap, 8px);
}

slot[name="leading-icon"]::slotted(u-icon-button) {
  color: inherit;
}

:host([position=absolute]) .container {
  position: absolute;
}

:host([position=fixed]) .container {
  position: fixed;
  inset-inline: 0;
  inset-block-start: 0;
  inset-inline-start: var(--u-app-bar-offset, 0);
}

:host([position=absolute]),
:host([position=fixed]) {
  padding-top: var(--_content-height);

  .container {
    z-index: var(--u-fixed-app-bar-z-index, 1010);
  }
}

.extended-content {
  display: flex;
  align-items: flex-end;
  padding-inline: var(--u-extended-content-inline-padding, 16px);
}

:host([size=medium]) {
  .extended-content {
    @include api.typo(headline-s, extended-content-medium);
    height: var(--u-extended-content-medium-height, 3.5rem);
    padding-bottom: var(--u-extended-content-medium-padding-bottom, 24px);
  }
}

:host([size=large]) {
  .extended-content {
    @include api.typo(headline-m, extended-content-large);
    height: var(--u-extended-content-medium-large, 6rem);
    padding-bottom: var(--u-extended-content-large-padding-bottom, 28px);
  }
}

.container {
  background: inherit;
}

.content {
  display: flex;
  align-items: center;
  background-color: inherit;
  transition: inherit;
  min-height: var(--u-top-app-bar-min-height, 56px);

  @include api.media-breakpoint-up(md) {
    min-height: var(--u-top-app-bar-extended-min-height, 64px);
  }
}

.headline {
  @include api.typo(title-l, top-app-bar-headline);
  margin-inline: var(--u-headline-margin, 16px);

  @at-root :host([has-leading-icon]) & {
    margin-inline-start: 0;
  }
}

.leading-icon {
  margin-inline: var(--u-leading-icon-margin, 8px);
}

.trailing-icon {
  padding-inline: var(--u-trailing-icon-margin, 8px);
  margin-inline-start: auto;
}
