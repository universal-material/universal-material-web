@use "sass:string";

@use "../functions";

@mixin current-color-vars-important($current-color-var-name) {
  --u-current-text-color: var(#{$current-color-var-name}) !important;

  --u-color-high-emphasis: #{functions.get-color-transparency-mix(var(--u-current-text-color), var(--u-high-emphasis-opacity))} !important;
  --u-color-low-emphasis: #{functions.get-color-transparency-mix(var(--u-current-text-color), var(--u-low-emphasis-opacity))} !important;
  --u-color-lower-emphasis: #{functions.get-color-transparency-mix(var(--u-current-text-color), var(--u-lower-emphasis-opacity))} !important;
  color: var(--u-color-high-emphasis) !important;
}

@mixin current-color-vars($current-color-var-name) {
  --u-current-text-color: var(#{$current-color-var-name});

  --u-color-high-emphasis: #{functions.get-color-transparency-mix(var(--u-current-text-color), var(--u-high-emphasis-opacity))};
  --u-color-low-emphasis: #{functions.get-color-transparency-mix(var(--u-current-text-color), var(--u-low-emphasis-opacity))};
  --u-color-lower-emphasis: #{functions.get-color-transparency-mix(var(--u-current-text-color), var(--u-lower-emphasis-opacity))};
  color: var(--u-color-high-emphasis);
}

@mixin bg-variant-important($color-name) {
  .u-bg-#{$color-name} {
    background-color: var(--u-color-#{$color-name}) !important;
  }
}

@mixin text-bg-variant-important($color-name, $on-color-name: null) {

  @if $on-color-name == null {
    $on-color-name: on-#{$color-name};
  }

  $container-index: string.index($on-color-name, "surface-container");
  @if $container-index != null {
    $on-color-name: #{string.slice($on-color-name, 1, $container-index - 1)}surface;
  }

  .u-text-bg-#{$color-name} {
    @include current-color-vars-important(--u-color-#{$on-color-name});
    background-color: var(--u-color-#{$color-name}) !important;
  }
}
